name: Terraform + Ansible CI/CD

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: Terraform Apply
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_STATE_BUCKET: ${{ secrets.TF_STATE_BUCKET }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init -backend-config="bucket=$TF_STATE_BUCKET"

      - name: Terraform Apply
        run: terraform apply -auto-approve

      - name: Get EC2 Public IP
        id: get_ip
        run: |
          EC2_IP=$(terraform output -raw instance_public_ip)
          echo "ec2_ip=$EC2_IP" >> $GITHUB_ENV

      - name: Get Security Group ID
        id: get_sg
        run: |
          SG_ID=$(terraform output -raw security_group_id)
          echo "sg_id=$SG_ID" >> $GITHUB_ENV

      - name: Install Ansible
        run: sudo apt-get update && sudo apt-get install -y ansible

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "$EC2_SSH_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
        env:
          EC2_SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

      # ✅ GitHubランナーのIPをSecurity Groupに一時的に許可
      - name: Authorize GitHub Runner IP
        run: |
          RUNNER_IP=$(curl -s ifconfig.me)
          echo "Allowing SSH from $RUNNER_IP"
          aws ec2 authorize-security-group-ingress \
            --group-id $SG_ID \
            --protocol tcp \
            --port 22 \
            --cidr $RUNNER_IP/32
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-west-2

      # ✅ Ansible用のインベントリを動的に作成
      - name: Create dynamic Ansible inventory
        run: |
          mkdir -p ansible
          echo "[webservers]" > ansible/inventory.ini
          echo "${{ env.ec2_ip }} ansible_user=ec2-user ansible_ssh_private_key_file=~/.ssh/id_rsa" >> ansible/inventory.ini

      # ✅ SSHテスト（オプション・デバッグ用）
      - name: Test SSH connection
        run: ssh -o StrictHostKeyChecking=no ec2-user@${{ env.ec2_ip }} "echo SSH OK"

      # ✅ Ansible実行
      - name: Run Ansible Playbook
        run: ansible-playbook -i ansible/inventory.ini ansible/playbook.yml

      # ✅ 最後にSSH許可を削除（セキュリティ的に重要）
      - name: Revoke GitHub Runner IP
        if: always()
        run: |
          RUNNER_IP=$(curl -s ifconfig.me)
          echo "Revoking SSH from $RUNNER_IP"
          aws ec2 revoke-security-group-ingress \
            --group-id $SG_ID \
            --protocol tcp \
            --port 22 \
            --cidr $RUNNER_IP/32
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-west-2
